The Secure Sockets Layer (SSL) protocol is an application layer protocol developed by Netscape for managing the security of message transmission on the Internet. 

It is used to provide a secure authentication mechanism between two communicating applications, such as a client and a server. 

SSL requires a reliable transport protocol, such as TCP, for data transmission and reception. 

It uses RSA asymmetric (public-key) encryption to encrypt data transferred over SSL connections.

Any application-layer protocol that is higher than SSL, such as HTTP, FTP, and telnet, can form a transparent layer over SSL. 

SSL acts as an arbitrator between the encryption algorithm and the session key; it also verifies the destination server prior to the transmission and reception of data.

SSL encrypts the complete data of the application protocol to ensure security


▪ Private channel – All the messages are encrypted after a simple handshake is used to define a secret key.

▪ Authenticated channel – The server endpoint of the conversation is always encrypted, whereas the client endpoint is optionally authenticated.

▪ Reliable channel – Message transfer has an integrity check.

SSL uses both asymmetric and symmetric authentication mechanisms. 

Public-key encryption verifies the identities of the server, the client, or both. Once authentication has occurred, the client and server can create symmetric keys, allowing them to communicate and transfer data rapidly. 

An SSL session is responsible for carrying out the SSL handshake protocol to organize the states of the server and clients, thus ensuring consistency of the protocol


▪ The client initiates the communication by sending a hello message with the session ID of the session that is to be resumed.

▪ If the server finds a match, it re-establishes the session under the specified session state with the same session ID.

▪ At this point, both the server and the client exchange the changed spec messages and proceed directly to the finished messages.

▪ After re-establishment, the server and client exchange data at the application layer. 

▪ If the session ID does not exist, the server creates a new session ID. The SSL client and server then carry out a complete handshake.





