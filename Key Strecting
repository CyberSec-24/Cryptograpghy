Key Stretching Key stretching refers to processes used to make a weak key stronger, usually by making it longer.

This technique helps in defending against brute-force attacks. In general, passwords or passphrases generated by end users are weak and predictable.

Hence, key stretching helps security professionals/users to prevent such attacks by strengthening their passwords. 

In the key stretching technique, the initial key is given as input to an algorithm that generates an enhanced key.

The key must be sufficiently resistant to brute-force attacks. 

It is very difficult for the attackers to predict the enhanced key as they need to try every possible combination of the key or likely combinations of the enhanced key.

There are many functions and libraries that perform key stretching as part of their working: 

▪ Password-Based Key Derivation Function 2 (PBKDF2) is part of PKCS #5 v. 2.01.
It applies some functions (such as a hash or HMAC) to the password or passphrase along with Salt to produce a derived key.

▪ Bcrypt is used with passwords, and it essentially uses a variant of the Blowfish algorithm, converted to a hashing algorithm, to hash a password and add Salt to it.
